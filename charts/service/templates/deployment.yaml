---
{{- $scope := . }}
{{- $values := .Values }}
{{- $release := .Release }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.name" $scope }}
  namespace: {{ $release.Namespace }}
  labels:
{{ include "chart.labels" $scope | indent 4 }}
spec:
  selector:
    matchLabels:
      app: {{ include "chart.name" $scope }}
      release: {{ $release.Name }}
      namespace: {{ $release.Namespace }}
      version: {{ include "chart.appVersion" $scope }}
  replicas: {{ $values.replicaCount }}
  startegy:
    type: "RollingUpdate"
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      annotations:
{{- if $values.prometheus.enabled }}
        prometheus.io/scrape: 'true'
        prometheus.io/path: {{ default $values.prometheus.path "/metrics" }}
        prometheus.io/port: {{ default $values.prometheus.port "8082" }}
        prometheus.io/scheme: {{ default $values.prometheus.scheme "http" }}
{{- else }}
        prometheus.io/scrape: 'false'
{{- end }}
      labels:
        app: {{ include "chart.name" $scope }}
        release: {{ $release.Name }}
        namespace: {{ $release.Namespace }}
        version: {{ include "chart.appVersion" $scope }}
    spec:
{{- if and $values.serviceAccount $values.serviceAccount.name }}
      serviceAccountName: {{ $values.serviceAccount.name }}
{{- end }}
      securityContext:
{{ toYaml $values.podSecurityContext | indent 8 }}
      containers:
        - name: service
          securityContext:
{{ toYaml $values.securityContext | indent 12 }}
          env:
  {{- if $values.extraEnvs }}
{{ toYaml $values.extraEnvs | indent 12 }}
  {{- end }}
          image: {{ printf "%s/%s:%s" $values.image.registry $values.image.repository $values.image.tag }}
          imagePullPolicy: {{ default $values.image.pullPolicy "IfNotPresent" }}
          ports:
  {{- if and $values.service.enabled $values.service.http }}
            - name: http
              containerPort: 8080
  {{- end }}
  {{- if $values.extraContainerPorts }}
{{ toYaml $values.containerPorts | indent 12 }}
  {{- end }}
  {{- if $values.resources }}
          resources:
{{ toYaml $values.resources | indent 12 }}
  {{- end }}
  {{- if $values.extraVolumeMounts }}
          volumeMounts:
{{ toYaml $values.extraVolumeMounts | indent 12 }}
  {{- end }}
  {{- if $values.probes }}
{{ toYaml $values.probes | indent 10 }}
  {{- end }}
{{- if $values.affinity }}
      affinity:
{{ toYaml $values.affinity | indent 8 }}
{{- end }}
{{- if $values.nodeSelector }}
      nodeSelector:
{{ toYaml $values.nodeSelector | indent 8 }}
{{- end }}
{{- if $values.tolerations }}
      tolerations:
{{ toYaml $values.tolerations | indent 8 }}
{{- end }}
{{- if $values.extraVolumes }}
      volumes:
{{ toYaml $values.extraVolumes | indent 8 }}
{{- end }}
