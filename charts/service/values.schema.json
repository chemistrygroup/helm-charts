{
  "$schema": "http://json-schema.org/schema#",
  "type": "object",
  "properties": {
    "version": {
      "type": "string",
      "title": "Service Version",
      "form": true,
      "description": "Defaults to v1 if not set"
    },
    "nameOverride": {
      "type": "string",
      "title": "Chart/Service Name",
      "description": "Override's the service default name that is setted according to the chart name",
      "form": true
    },
    "fullnameOverride": {
      "type": "string",
      "title": "Chart Full Name",
      "description": "Override's the service default fullname name that is setted according to the chart name",
      "form": true
    },
    "replicaCount": {
      "type": "integer",
      "title": "Pod Replica Count",
      "description": "Number of pod instances currently running",
      "form": true,
      "exclusiveMinimum": 0
    },
    "prometheus": {
      "type": "object",
      "title": "Prometheus Settings",
      "description": "Prometheus scrapping settings",
      "object": {
        "enabled": {
          "type": "boolean",
          "title": "Enabled",
          "description": "Enables/Disables prometheus metric scrapping",
          "form": true,
          "render": "slider",
          "sliderMin": 0,
          "sliderMax": 1
        },
        "path": {
          "type": "string",
          "title": "Path",
          "description": "Http URL Path from were prometheus should scrape for metrics",
          "form": true
        },
        "port": {
          "type": "string",
          "title": "Port",
          "description": "Network port were the metrics webserver is running at",
          "form": true
        },
        "scheme": {
          "type": "string",
          "title": "Scheme",
          "enum": [
            "http",
            "https"
          ],
          "description": "Http scheme/protocol to use ( supported http and https )",
          "form": true
        }
      }
    },
    "serviceAccount": {
      "type": "object",
      "title": "ServiceAccount Settings",
      "description": "ServiceAccount related settings",
      "properties": {
        "create": {
          "type": "boolean",
          "title": "Create ServiceAccount",
          "description": "The chart can create a serviceAccount with the name specified in the serviceAcccountName property",
          "form": true,
          "render": "slider",
          "sliderMin": 0,
          "sliderMax": 1
        },
        "name": {
          "type": "string",
          "title": "ServiceAccount name",
          "description": "Service Account Name to create and/or to run the pod with",
          "form": true
        },
        "annotations": {
          "type": "object",
          "title": "Annotations",
          "description": "Service Account annotations",
          "form": true
        }
      }
    },
    "rbac": {
      "type": "object",
      "title": "RBAC Settings",
      "description": "Kubernetes Role Based Access Control Settings",
      "properties": {
        "enabled": {
          "type": "boolean",
          "title": "Enabled",
          "description": "Enables/Disables kubernetes role based access control",
          "form": true,
          "render": "slider",
          "sliderMin": 0,
          "sliderMax": 1
        },
        "type": {
          "type": "string",
          "title": "Type",
          "enum": [
            "cluster",
            "namespace"
          ],
          "description": "Type of the role based access control if it is Cluster wide or only namespace wide",
          "form": true
        }
      }
    },
    "affinity": {
      "title": "Pod Scheduling Constraints",
      "form": true,
      "$ref": "https://kubernetesjsonschema.dev/v1.15.0/_definitions.json#/definitions/io.k8s.api.core.v1.Affinity",
      "description": "If specified, the pod's scheduling constraints"
    },
    "nodeSelector": {
      "title": "Pod Node Selector",
      "form": true,
      "additionalProperties": {
        "type": [
          "string",
          "null"
        ]
      },
      "description": "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
      "type": "object"
    },
    "tolerations": {
      "title": "Pod Tolerations",
      "form": true,
      "description": "If specified, the pod's tolerations.",
      "items": {
        "$ref": "https://kubernetesjsonschema.dev/v1.15.0/_definitions.json#/definitions/io.k8s.api.core.v1.Toleration"
      },
      "type": [
        "array",
        "null"
      ]
    },
    "image": {
      "type": "object",
      "title": "Container Image",
      "description": "Container Image related settings",
      "form": true,
      "properties": {
        "registry": {
          "type": "string",
          "title": "Registry URL",
          "description": "Docker Container registry URL",
          "form": true
        },
        "repository": {
          "type": "string",
          "title": "Repository Name",
          "description": "Docker Container registry repository name",
          "form": true
        },
        "tag": {
          "type": "string",
          "title": "Image Tag",
          "description": "Container Image Tag",
          "form": true
        },
        "pullPolicy": {
          "type": "string",
          "title": "PullPolicy",
          "description": "Kubernetes Container Image pull policy",
          "form": true,
          "enum": [
            "IfNotPresent",
            "Allways"
          ]
        }
      }
    },
    "command": {
      "type": "object",
      "title": "Command",
      "description": "Command to execute inside the pod",
      "properties": {
        "name": {
          "type": "string",
          "title": "ServiceAccount name",
          "description": "Service Account Name to create and/or to run the pod with",
          "form": true
        },
        "args": {
          "type": "array",
          "title": "Annotations",
          "description": "Service Account annotations",
          "form": true
        }
      }
    },
    "resources": {
      "type": "object",
      "title": "Required Resources",
      "description": "Configure resource requests and Limits",
      "form": true,
      "properties": {
        "requests": {
          "title": "Requests",
          "type": "object",
          "properties": {
            "memory": {
              "type": "string",
              "form": true,
              "render": "slider",
              "title": "Memory Request",
              "sliderMin": 10,
              "sliderMax": 2048,
              "sliderUnit": "Mi"
            },
            "cpu": {
              "type": "string",
              "form": true,
              "render": "slider",
              "title": "CPU Request",
              "sliderMin": 10,
              "sliderMax": 2000,
              "sliderUnit": "m"
            }
          }
        },
        "limits": {
          "title": "Limits",
          "type": "object",
          "properties": {
            "memory": {
              "type": "string",
              "form": true,
              "render": "slider",
              "title": "Memory Limit",
              "sliderMin": 10,
              "sliderMax": 2048,
              "sliderUnit": "Mi"
            },
            "cpu": {
              "type": "string",
              "form": true,
              "render": "slider",
              "title": "CPU Limit",
              "sliderMin": 10,
              "sliderMax": 2000,
              "sliderUnit": "m"
            }
          }
        }
      }
    },
    "hpa": {
      "type": "object",
      "title": "HPA Settings",
      "description": "Controlls the Horizontal Pod Autoscalling settings",
      "form": true,
      "properties": {
        "minReplicas": {
          "title": "Minimum Number of Replicas",
          "description": "set's the minimum number of replicas for this service",
          "type": "integer",
          "exclusiveMinimum": 0,
          "form": true
        },
        "maxReplicas": {
          "title": "Maximum Number of Replicas",
          "description": "set's the maximum number of replicas for this service",
          "type": "integer",
          "exclusiveMinimum": 1,
          "form": true
        },
        "targetCPU": {
          "title": "Target CPU",
          "description": "the target cpu value that triggers the scale action",
          "type": "integer",
          "exclusiveMinimum": 0,
          "exclusiveMaximum": 100,
          "render": "slider",
          "sliderMin": 10,
          "sliderMax": 2048,
          "sliderUnit": "Mi",
          "form": true
        }
      }
    },
    "probes": {
      "type": "object",
      "title": "Readiness/Liveness Probes",
      "description": "Control Kubernetes Pod Readiness and Liveness probes",
      "form": true,
      "properties": {
        "livenessProbe": {
          "title": "Liveness Probe",
          "form": true,
          "$ref": "https://kubernetesjsonschema.dev/v1.15.0/_definitions.json#/definitions/io.k8s.api.core.v1.Probe",
          "description": "Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
        },
        "readinessProbe": {
          "title": "Readiness Probe",
          "form": true,
          "$ref": "https://kubernetesjsonschema.dev/v1.15.0/_definitions.json#/definitions/io.k8s.api.core.v1.Probe",
          "description": "Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
        }
      }
    },
    "podSecurityContext": {
      "title": "Pod Security Context",
      "form": true,
      "$ref": "https://kubernetesjsonschema.dev/v1.15.0/_definitions.json#/definitions/io.k8s.api.core.v1.PodSecurityContext",
      "description": "SecurityContext holds pod-level security attributes and common container settings. Optional: Defaults to empty.  See type description for default values of each field."
    },
    "securityContext": {
      "title": "Container Security Context",
      "form": true,
      "$ref": "https://kubernetesjsonschema.dev/v1.15.0/_definitions.json#/definitions/io.k8s.api.core.v1.SecurityContext",
      "description": "Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/"
    },
    "extraEnvs": {
      "title": "Extra Pod Environment Variables",
      "form": true,
      "description": "List of environment variables to set in the container. Cannot be updated.",
      "items": {
        "$ref": "https://kubernetesjsonschema.dev/v1.15.0/_definitions.json#/definitions/io.k8s.api.core.v1.EnvVar"
      },
      "type": [
        "array",
        "null"
      ],
      "x-kubernetes-patch-merge-key": "name",
      "x-kubernetes-patch-strategy": "merge"
    },
    "extraVolumes": {
      "title": "Extra Volumes",
      "form": true,
      "description": "List of volumes that can be mounted by containers belonging to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes",
      "items": {
        "$ref": "https://kubernetesjsonschema.dev/v1.15.0/_definitions.json#/definitions/io.k8s.api.core.v1.Volume"
      },
      "type": [
        "array",
        "null"
      ],
      "x-kubernetes-patch-merge-key": "name",
      "x-kubernetes-patch-strategy": "merge,retainKeys"
    },
    "extraVolumeMounts": {
      "title": "Extra Volume Mounts",
      "form": true,
      "description": "Pod volumes to mount into the container's filesystem. Cannot be updated.",
      "items": {
        "$ref": "https://kubernetesjsonschema.dev/v1.15.0/_definitions.json#/definitions/io.k8s.api.core.v1.VolumeMount"
      },
      "type": [
        "array",
        "null"
      ],
      "x-kubernetes-patch-merge-key": "mountPath",
      "x-kubernetes-patch-strategy": "merge"
    },
    "extraContainerPorts": {
      "title": "Extra Container Ports",
      "form": true,
      "description": "List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \"0.0.0.0\" address inside a container will be accessible from the network. Cannot be updated.",
      "items": {
        "$ref": "https://kubernetesjsonschema.dev/v1.15.0/_definitions.json#/definitions/io.k8s.api.core.v1.ContainerPort"
      },
      "type": [
        "array",
        "null"
      ],
      "x-kubernetes-list-map-keys": [
        "containerPort",
        "protocol"
      ],
      "x-kubernetes-list-type": "map",
      "x-kubernetes-patch-merge-key": "containerPort",
      "x-kubernetes-patch-strategy": "merge"
    },
    "service": {
      "type": "object",
      "title": "Service Settings",
      "description": "Dedicated deployment ClusterIP type service",
      "form": true,
      "properties": {
        "enabled": {
          "title": "Enabled",
          "description": "Creates a ClusterIP service for this deployment",
          "type": "boolean",
          "form": true
        },
        "http": {
          "title": "HTTP Enabled",
          "description": "Enables a mapping from service port 80 to container port 8080",
          "type": "boolean",
          "form": true
        },
        "ingress": {
          "title": "Ingress Traffic",
          "description": "Controlls http service ingress traffic settings",
          "type": "object",
          "properties": {
            "enabled": {
              "title": "Enabled",
              "description": "Enables/Disables ingress traffic routing",
              "type": "boolean",
              "form": true
            },
            "paths": {
              "type": "array",
              "title": "Paths",
              "description": "Route traffic from one external url path to another",
              "items": {
                "$ref": "#pathItem"
              },
              "form": true
            }
          }
        },
        "extraPorts": {
          "title": "Extra Service Ports",
          "form": true,
          "description": "The list of ports that are exposed by this service. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
          "items": {
            "$ref": "https://kubernetesjsonschema.dev/v1.15.0/_definitions.json#/definitions/io.k8s.api.core.v1.ServicePort"
          },
          "type": [
            "array",
            "null"
          ],
          "x-kubernetes-list-map-keys": [
            "port",
            "protocol"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "port",
          "x-kubernetes-patch-strategy": "merge"
        }
      }
    },
    "configMaps": {
      "type": [
        "array",
        "null"
      ],
      "title": "ConfigMaps",
      "description": "Specify configmaps to create and their data",
      "items": {
        "$ref": "#configMapItem"
      },
      "form": true
    },
    "secrets": {
      "type": [
        "array",
        "null"
      ],
      "title": "Secrets",
      "description": "Specify secrets to create and their data",
      "items": {
        "$ref": "#secretItem"
      },
      "form": true
    }
  },
  "$defs": {
    "pathItem": {
      "$anchor": "pathItem",
      "type": "object",
      "title": "Path Item",
      "form": true,
      "properties": {
        "path": {
          "type": "string",
          "title": "Original Path",
          "form": true
        },
        "targetPath": {
          "type": "string",
          "title": "Target Path",
          "form": true
        }
      }
    },
    "configMapItem": {
      "$anchor": "configMapItem",
      "type": "object",
      "title": "Config Map Item",
      "form": true,
      "properties": {
        "name": {
          "type": "string",
          "title": "Name",
          "description": "ConfigMap name",
          "form": true
        },
        "data": {
          "type": "object",
          "title": "Data",
          "description": "ConfigMap data",
          "form": true
        }
      }
    },
    "secretItem": {
      "$anchor": "secretItem",
      "type": "object",
      "title": "Secret Item",
      "form": true,
      "properties": {
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Secret Key",
          "form": true
        },
        "value": {
          "type": "string",
          "title": "Value",
          "description": "Secret Value ( this will be base64 encoded )",
          "form": true
        }
      }
    }
  }
}