{{- $scope := . }}
{{- $values := .Values }}
{{- $release := .Release }}
{{- $chart := .Chart }}
# External Rules
{{- if $values.external }}
  {{- if $values.external.httpAndHttps }}
    {{- range $service := $values.external.httpAndHttps }}
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: {{ $service.name }}-ext
spec:
  hosts:
  - {{ $service.host }}
  tls:
  - match:
    - port: {{ default $service.port.https 443 }}
      sni_hosts:
      - {{ $service.host }}
    route:
    - destination:
        host: {{ $service.host }}
        port:
          number: {{ default $service.port.https 443 }}
      weight: 100
    {{- end }}
  {{- end }}
  {{- if $values.external.httpToHttps }}
    {{- range $service := $values.external.httpToHttps }}
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: {{ $service.name }}-ext
spec:
  hosts:
  - {{ $service.host }}
  tls:
  - match:
    - port: {{ default $service.port.http 80 }}
    route:
    - destination:
        host: {{ $service.host }}
        subset: {{ $service.name }}-tls-origination
        port:
          number: {{ default $service.port.https 443 }}
    {{- end }}
  {{- end }}
{{- end }}
# Egress Rules
{{- if $values.egress }}
  {{- if $values.egress.http }}
    {{- range $service := $values.egress.http }}
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: {{ $service.name }}-egress
spec:
  hosts:
  - {{ $service.host }}
  gateways:
  - {{ default $service.gateway.name "istio-egressgateway" }}
  - mesh
  http:
  - match:
    - gateways:
      - mesh
      port: {{ default $service.port 80 }}
    route:
    - destination:
        host: {{ default $service.gateway.name "istio-egressgateway" }}.istio-system.svc.cluster.local
        subset: {{ $service.name }}-subset
        port:
          number: {{ default $service.port 80 }}
      weight: 100
  - match:
    - gateways:
      - {{ default $service.gateway.name "istio-egressgateway" }}
      port: {{ default $service.port 80 }}
    route:
    - destination:
        host: {{ $service.host }}
        port:
          number: {{ default $service.port 80 }}
      weight: 100
    {{- end }}
  {{- end }}
  {{- if $values.egress.https }}
    {{- range $service := $values.egress.https }}
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: {{ $service.name }}-egress
spec:
  hosts:
  - {{ $service.host }}
  gateways:
  - mesh
  - {{ default $service.gateway.name "istio-egressgateway" }}
  tls:
  - match:
    - gateways:
      - mesh
      port: {{ default $service.port 443 }}
      sni_hosts:
      - {{ $service.host }}
    route:
    - destination:
        host: {{ default $service.gateway.name "istio-egressgateway" }}.istio-system.svc.cluster.local
        subset: {{ $service.name }}-subset
        port:
          number: {{ default $service.port 443 }}
  - match:
    - gateways:
      - {{ default $service.gateway.name "istio-egressgateway" }}
      port: {{ default $service.port 443 }}
      sni_hosts:
        - {{ $service.host }}
    route:
    - destination:
        host: {{ $service.host }}
        port:
          number: {{ default $service.port 443 }}
      weight: 100
    {{- end }}
  {{- end }}
  {{- if $values.egress.httpToHttps }}
    {{- range $service := $values.egress.httpToHttps }}
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: {{ $service.name }}-egress
spec:
  hosts:
  - {{ $service.host }}
  gateways:
  - {{ default $service.gateway.name "istio-egressgateway" }}
  - mesh
  http:
  - match:
    - gateways:
      - mesh
      port: {{ default $service.port.http 80 }}
    route:
    - destination:
        host: {{ default $service.gateway.name "istio-egressgateway" }}.istio-system.svc.cluster.local
        subset: {{ $service.name }}-subset
        port:
          number: {{ default $service.port.http 80 }}
      weight: 100
  - match:
    - gateways:
      - {{ default $service.gateway.name "istio-egressgateway" }}
      port: {{ default $service.port.http 80 }}
    route:
    - destination:
        host: {{ $service.host }}
        port:
          number: {{ default $service.port.https 443 }}
      weight: 100
    {{- end }}
  {{- end }}
  {{- if $values.egress.tcp }}
    {{- range $service := $values.egress.tcp }}
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: {{ $service.name }}-egress
spec:
  hosts:
  - {{ $service.host }}
  gateways:
  - mesh
  - {{ default $service.gateway.name "istio-egressgateway" }}
  tcp:
  - match:
    - gateways:
      - mesh
      destinationSubnets:
      - {{ $service.ip }}/32
      port: {{ $service.port }}
    route:
    - destination:
        host: {{ default $service.gateway.name "istio-egressgateway" }}.istio-system.svc.cluster.local
        subset: {{ $service.name }}-subset
        port:
          number: {{ $service.port }}
  - match:
    - gateways:
      - {{ default $service.gateway.name "istio-egressgateway" }}
      port: {{ $service.port }}
    route:
    - destination:
        host: {{ $service.host }}
        port:
          number: {{ $service.port }}
      weight: 100
    {{- end }}
  {{- end }}
{{- end }}
    