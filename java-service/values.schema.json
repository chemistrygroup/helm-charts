{
  "$schema": "http://json-schema.org/schema#",
  "type": "object",
  "properties": {
    "version": {
      "type": "string",
      "title": "Service Version",
      "form": true,
      "description": "Defaults to v1 if not set"
    },
    "name": {
      "type": "string",
      "title": "Service Name",
      "form": true
    },
    "prometheus": {
      "type": "object",
      "title": "Prometheus Settings",
      "description": "Prometheus scrapping settings",
      "object": {
        "enabled": {
          "type": "boolean",
          "title": "Enabled",
          "description": "Enables/Disables prometheus metric scrapping",
          "form": true,
          "render": "slider",
          "sliderMin": 0,
          "sliderMax": 1
        },
        "path": {
          "type": "string",
          "title": "Path",
          "description": "Http URL Path from were prometheus should scrape for metrics",
          "form": true
        },
        "port": {
          "type": "integer",
          "title": "Port",
          "description": "Network port were the metrics webserver is running at",
          "form": true
        },
        "scheme": {
          "type": "string",
          "title": "Scheme",
          "enum": ["http", "https"],
          "description": "Http scheme/protocol to use ( supported http and https )",
          "form": true
        }
      }
    },
    "serviceAccountName": {
      "type": "string",
      "title": "Service Account Name",
      "description": "Service Account Name to create and/or to run the pod with",
      "form": true
    },
    "serviceAccount": {
      "type": "object",
      "title": "ServiceAccount Settings",
      "description": "ServiceAccount related settings",
      "properties": {
        "create": {
          "type": "boolean",
          "title": "Create ServiceAccount",
          "description": "The chart can create a serviceAccount with the name specified in the serviceAcccountName property",
          "form": true,
          "render": "slider",
          "sliderMin": 0,
          "sliderMax": 1
        },
        "name": {
          "type": "string",
          "title": "ServiceAccount name",
          "description": "Service Account Name to create and/or to run the pod with ( default will contain the value of serviceAccountName )",
          "form": true
        }
      }
    },
    "rbac": {
      "type": "object",
      "title": "RBAC Settings",
      "description": "Kubernetes Role Based Access Control Settings",
      "properties": {
        "enabled": {
          "type": "boolean",
          "title": "Enabled",
          "description": "Enables/Disables kubernetes role based access control",
          "form": true,
          "render": "slider",
          "sliderMin": 0,
          "sliderMax": 1
        },
        "type": {
          "type": "string",
          "title": "Type",
          "enum": ["cluster", "namespace"],
          "description": "Type of the role based access control if it is Cluster wide or only namespace wide",
          "form": true
        },
        "ref": {
          "type": "string",
          "title": "Role Name",
          "description": "A name used to reference the role and it's bindings",
          "form": true
        },
        "serviceAccount": {
          "type": "string",
          "title": "ServiceAccount name",
          "description": "Service Account Name to create and/or to run the pod with ( default will contain the value of serviceAccountName )",
          "form": true
        }
      }
    },
    "affinity": {
      "type": "object",
      "title": "Pod affinity",
      "description": "Kubernetes pod affinity"
    },
    "nodeSelector": {
      "type": "object",
      "title": "Node Selector",
      "description": "Kubernetes Node Selector"
    },
    "image": {
      "type": "object",
      "title": "Container Image",
      "description": "Container Image related settings",
      "form": true,
      "properties": {
        "registry": {
          "type": "string",
          "title": "Registry URL",
          "description": "Docker Container registry URL",
          "form": true
        },
        "repository": {
          "type": "string",
          "title": "Repository Name",
          "description": "Docker Container registry repository name",
          "form": true
        },
        "tag": {
          "type": "string",
          "title": "Image Tag",
          "description": "Container Image Tag",
          "form": true
        },
        "pullPolicy": {
          "type": "string",
          "title": "PullPolicy",
          "description": "Kubernetes Container Image pull policy",
          "form": true,
          "enum": ["IfNotPresent", "Allways"]
        }
      }
    },
    "resources": {
      "type": "object",
      "title": "Required Resources",
      "description": "Configure resource requests and Limits",
      "form": true,
      "properties": {
        "requests": {
          "title": "Requests",
          "type": "object",
          "properties": {
            "memory": {
              "type": "string",
              "form": true,
              "render": "slider",
              "title": "Memory Request",
              "sliderMin": 10,
              "sliderMax": 2048,
              "sliderUnit": "Mi"
            },
            "cpu": {
              "type": "string",
              "form": true,
              "render": "slider",
              "title": "CPU Request",
              "sliderMin": 10,
              "sliderMax": 2000,
              "sliderUnit": "m"
            }
          }
        },
        "limits": {
          "title": "Limits",
          "type": "object",
          "properties": {
            "memory": {
              "type": "string",
              "form": true,
              "render": "slider",
              "title": "Memory Limit",
              "sliderMin": 10,
              "sliderMax": 2048,
              "sliderUnit": "Mi"
            },
            "cpu": {
              "type": "string",
              "form": true,
              "render": "slider",
              "title": "CPU Limit",
              "sliderMin": 10,
              "sliderMax": 2000,
              "sliderUnit": "m"
            }
          }
        }
      }
    },
    "hpa": {
      "type": "object",
      "title": "HPA Settings",
      "description": "Controlls the Horizontal Pod Autoscalling settings",
      "form": true,
      "properties": {
        "minReplicas": {
          "title": "Minimum Number of Replicas",
          "description": "set's the minimum number of replicas for this service",
          "type": "integer",
          "exclusiveMinimum": 0,
          "form": true
        },
        "maxReplicas": {
          "title": "Maximum Number of Replicas",
          "description": "set's the maximum number of replicas for this service",
          "type": "integer",
          "exclusiveMinimum": 1,
          "form": true
        },
        "targetCPU": {
          "title": "Target CPU",
          "description": "the target cpu value that triggers the scale action",
          "type": "integer",
          "exclusiveMinimum": 0,
          "exclusiveMaximum": 100,
          "render": "slider",
          "sliderMin": 10,
          "sliderMax": 2048,
          "sliderUnit": "Mi",
          "form": true
        }
      }
    },
    "service": {
      "type": "object",
      "title": "HPA Settings",
      "description": "Controlls the Horizontal Pod Autoscalling settings",
      "form": true,
      "properties": {
        "minReplicas": {
          "title": "Minimum Number of Replicas",
          "description": "set's the minimum number of replicas for this service",
          "type": "integer",
          "exclusiveMinimum": 0,
          "form": true
        },
        "maxReplicas": {
          "title": "Maximum Number of Replicas",
          "description": "set's the maximum number of replicas for this service",
          "type": "integer",
          "exclusiveMinimum": 1,
          "form": true
        },
        "targetCPU": {
          "title": "Target CPU",
          "description": "the target cpu value that triggers the scale action",
          "type": "integer",
          "exclusiveMinimum": 0,
          "exclusiveMaximum": 100,
          "render": "slider",
          "sliderMin": 10,
          "sliderMax": 2048,
          "sliderUnit": "Mi",
          "form": true
        }
      }
    },
    "securityContext": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "title": "Enable Pod Security Context",
          "description": "When disabled, an initContainer will be used to set required folder permissions",
          "form": true
        }
      }
    }
  }
}